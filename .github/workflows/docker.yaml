name: Docker

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      PLATFORMS: linux/amd64,linux/arm64,linux/arm64/v8

    strategy:
      fail-fast: false
      matrix:
        version:
        - "1.7.9"
        extras:
        - dbt-bigquery==1.7.6 dbt-clickhouse==1.7.6
        - dbt-bigquery==1.7.6
        - dbt-clickhouse==1.7.6
        base:
        - python:3.11.8-slim-bookworm
        - python:3.12.2-slim-bookworm
        include:
        - extras: dbt-bigquery==1.7.6 dbt-clickhouse==1.7.6
          extras-name: all
        - extras: dbt-bigquery==1.7.6
          extras-name: bigquery
        - extras: dbt-clickhouse==1.7.6
          extras-name: clickhouse
        - base: python:3.11.8-slim-bookworm
          base-name: py3.11-bookworm
        - base: python:3.12.2-slim-bookworm
          base-name: py3.12-bookworm
        - base: python:3.12.2-slim-bookworm
          is-latest-base: true

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure
      id: config
      uses: actions/github-script@v7
      env:
        GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
        INPUT_MATRIX_EXTRAS_NAME: ${{ matrix.extras-name }}
        INPUT_MATRIX_BASE_NAME: ${{ matrix.base-name }}
        INPUT_MATRIX_IS_LATEST_BASE: ${{ !!matrix.is-latest-base }}
      with:
        script: |
          const os = require('os')

          core.exportVariable('NPROC', os.cpus().length * 2)
          core.setOutput('NPROC', os.cpus().length * 2)

          core.setOutput('image-owner', process.env.GITHUB_REPOSITORY_OWNER)
          core.setOutput('image-name', process.env.GITHUB_REPOSITORY_NAME.replace(/^docker-/, ''))

          const inputs = {
            extrasName: core.getInput('MATRIX_EXTRAS_NAME'),
            baseName: core.getInput('MATRIX_BASE_NAME'),
          }

          // Mark `all` as default
          if (inputs.extrasName === 'all') {
            inputs.extrasName = null
          }

          // Mark `latest` as default
          if (core.getBooleanInput('MATRIX_IS_LATEST_BASE')) {
            baseName = null
          }

          core.setOutput(
            'docker-image-tag-suffix', Object.values(inputs).filter(Boolean).map(x => `-${x}`).join(''),
          );

    - name: Setup - QEMU
      id: qemu
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ env.PLATFORMS }}

    - name: Setup - Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup - Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Setup - Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Setup - Docker image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |-
          ${{ steps.config.outputs.image-owner }}/${{ steps.config.outputs.image-name }}
          ghcr.io/${{ steps.config.outputs.image-owner }}/${{ steps.config.outputs.image-name }}
        flavor:
          latest=false
        tags: |-
          type=semver,pattern={{major}}.{{minor}},value=${{ matrix.version }},suffix=${{ steps.config.outputs.docker-image-tag-suffix }}
          type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ matrix.version }},suffix=${{ steps.config.outputs.docker-image-tag-suffix }}

    - name: Build
      uses: docker/build-push-action@v6
      id: build
      with:
        context: .
        build-args: |
          base=${{ matrix.base }}
          version=${{ matrix.version }}
          extras=${{ matrix.extras }}
        push: true
        platforms: ${{ env.PLATFORMS }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
